-
  name: test assert equals list of lists
  setup: 
    - use temp
    - drop table test_with_partitions
    - create table test_with_partitions(id bigint) partitioned by (dt string, dh string)
    - alter table test_with_partitions add partition(dt='20170202', dh='00')
    - alter table test_with_partitions add partition(dt='20170202', dh='01')
    - alter table test_with_partitions add partition(dt='20170202', dh='02')
  test: show partitions test_with_partitions
  assert_type: assert_equals
  assert_expectation:
    - [dt=20170202/dh=00]
    - [dt=20170202/dh=01]
    - [dt=20170202/dh=02]
  teardown:
    - drop table test_with_partitions
  ignore_failures: false
  return_type: LIST
- 
  name: test assert equals list of maps
  setup:
    - use temp
    - drop table test_map
    - create table test_map(id bigint, name string) row format delimited fields terminated by '\t' lines terminated by '\n' stored as TextFile
    - load data local inpath 'examples/test_data.txt' overwrite into table test_map
  test: select id, name from test_map
  assert_type: assert_equals
  assert_expectation:
    - 
      id: 1
      name: name1
    -
      id: 2
      name: name2
    -
      id: 3
      name: name3
    -
      id: 4
      name: name4
    -
      id: 5
      name: name5
  ignore_failures: false
  teardown: 
    - drop table test_map
  return_type: MAP
- 
  name: test assert equals file
  setup:
    - use temp
    - drop table test_file
    - create table test_file(id bigint, name string) row format delimited fields terminated by '\t' lines terminated by '\n' stored as TextFile
    - load data local inpath 'examples/test_data.txt' overwrite into table test_file
  test: select id, name from test_file
  assert_type: assert_equals
  assert_expectation: examples/expected_equals.csv
  teardown: 
    - drop table test_file
  ignore_failures: false
  return_type: CSV